"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var definition = "Type FullPersistence {\n  // persisted table will be written into this schema\n  schema: String\n\n  // create a view pointing to the persisted table with this name\n  view_name (optional): String\n  on_cascade (default: 'rebuild'): 'rebuild' | 'reuse'\n}\n\nType IncrementalPersistence {\n  // persisted_table will be written into this schema\n  schema: String\n\n  // create a view pointing to the persisted table with this name\n  view_name (optional): String\n\n  on_cascade (default: 'rebuild'): 'rebuild' | 'reuse'\n\n  incremental_column: String\n  primary_key (optional): String\n}\n\nType DateFormat = String;\n\nType SimpleNumberFormat = String;\n\nType FullNumberFormat {\n  pattern: String,\n  groupSeparator (default: ','): '.' | ',' | ' ',\n  decimalSeparator (default: '.'): ',' | '.'\n}\n\nType Format = DateFormat | SimpleNumberFormat | FullNumberFormat\n\nType TableModel (elem_name_as: 'name') {\n  type                        : 'table'\n  label             (optional): String\n  description       (optional): String\n  owner             (optional): String // email\n  data_source_name  (optional): String\n  table_name: String\n\n  dimension (\n    elem_name_as: 'name',\n    multiple: true,\n    unique_elem_name\n  ) {\n    label                                     : String\n    type                                      : DimensionType\n    hidden        (default: false)  : Boolean\n    description   (optional)                  : String\n    definition    (optional)                  : Heredoc\n    format        (optional)                  : Format\n  }\n\n  measure (\n    elem_name_as: 'name',\n    multiple: true,\n    unique_elem_name\n  ) {\n    label                                          : String\n    type                                           : MeasureType\n    hidden        (default: false)       : Boolean\n    description   (optional)                       : String\n    definition                                     : Heredoc\n    aggregation_type (default: 'custom') : String\n    format        (optional)                  : Format\n  }\n}\n\nType QueryModel (elem_name_as: 'name') {\n  type                           : 'query'\n  label             (optional)   : String\n  description       (optional)   : String\n  owner             (optional)   : String // email\n  data_source_name  (optional)   : String\n  query                          : Heredoc\n  models            (default: []): List             // List of models that the query used\n\n  persistence (optional): FullPersistence | IncrementalPersistence\n\n  dimension (\n    elem_name_as: 'name',\n    multiple: true,\n    unique_elem_name\n  ) {\n    label                                     : String\n    type                                      : DimensionType\n    hidden        (default: false)  : Boolean\n    description   (optional)                  : String\n    definition    (optional)                  : Heredoc\n    format        (optional)                  : Format\n  }\n\n  measure (\n    elem_name_as: 'name',\n    multiple: true,\n    unique_elem_name\n  ) {\n    label                                          : String\n    type                                           : MeasureType\n    hidden        (default: false)       : Boolean\n    description   (optional)                       : String\n    definition                                     : Heredoc\n    aggregation_type (default: 'custom')           : AggregationType\n    format        (optional)                  : Format\n  }\n}\n\nType Model = TableModel | QueryModel\n\nType DimensionType = 'text' | 'number' | 'date' | 'datetime' | 'truefalse'\n\nType MeasureType = 'number' | 'date' | 'datetime'\n\nType AggregationType = 'avg' | 'sum' | 'count' | 'count distinct' | 'min' |\n                       'max' | 'median' | 'stdev' | 'stdevp' | 'var' | 'varp' |\n                       'running sum' | 'running avg' | 'running count' | 'running min' | 'running max' |\n                       'custom'\n\nType FieldRef {\n  model: String\n  field: String\n}\n\nFunc ref(model_name: String, field_name: String) {\n  FieldRef { model: model_name, field: field_name }\n}\n\nType Relationship {\n  type: 'many_to_one' | 'one_to_one'\n  from: FieldRef\n  to: FieldRef\n}\n\nType Dataset (elem_name_as: 'name') {\n  label (optional): String\n  description (optional): String\n  owner (optional): String\n  data_source_name: String\n  models: List\n  relationships: List\n  distinct_rows (default: true): Boolean\n}\n\nType RelationshipConfig {\n  rel: Relationship\n  active: Boolean\n  direction (default: 'two_way'): 'one_to_many' | 'two_way'\n}\n\nFunc rel_config(rel: Relationship, active: Boolean, direction: 'one_to_many' | 'two_way') {\n  RelationshipConfig {\n    rel: rel\n    active: active\n    direction: direction\n  }\n}\n\nType Schedule {\n  models: List\n  cron: String\n}";
exports.default = definition;
